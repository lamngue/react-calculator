{"version":3,"sources":["components/calculatorScreen.js","components/keyPad.js","App.js","serviceWorker.js","index.js"],"names":["style","textAlign","fontFamily","fontSize","width","height","border","backgroundColor","color","paddingRight","paddingLeft","borderRadius","CalculatorScreen","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","value","input","type","disabled","Component","KeyPad","onClick","name","id","className","borderSpacing","marginTop","align","App","_this","state","result","inputs","phepTinh","handleClick","bind","assertThisInitialized","n1","operator","n2","firstNumber","parseInt","secondNumber","arr","join","match","map","e","length","setState","newInputName","target","newInputValue","push","includes","prevState","numbersInput","giveDigits","calculate","toString","split","pop","console","log","slice","Fragment","calculatorScreen","keyPad","React","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d97c6b83.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nconst style = {\r\n    textAlign: 'left',\r\n    fontFamily: 'Ubuntu',    \r\n    fontSize: '3rem',\r\n    width: '250px',\r\n    height: '50px',   \r\n    border: 'none',\r\n    backgroundColor: '#252525',\r\n    color: '#fff',\r\n    paddingRight: '20px',\r\n    paddingLeft: '10px',\r\n    borderRadius: '10%'\r\n}\r\nclass CalculatorScreen extends Component {\r\n    constructor(props){\r\n        super();\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input value = {this.props.input} type=\"text\" style={style} disabled />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default CalculatorScreen;\r\n","import React, { Component } from 'react'\r\n\r\nclass KeyPad extends Component {\r\n    constructor(props){\r\n        super();\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input value=\"AC\" onClick={this.props.onClick} name=\"AC\" id=\"AC\" type=\"button\" className=\"text-center btn btn-danger btn-block\" />\r\n                <table className=\"buttons\" style={{ borderSpacing: '20px', width: '200px', marginTop: '25px' }} align=\"center\">\r\n                    <tr>\r\n                        <td><input onClick={this.props.onClick} type=\"button\" className=\"btn btn-block btn-primary\" name=\"one\" value=\"1\" /></td>\r\n                        <td><input onClick={this.props.onClick} type=\"button\" className=\"btn  btn-block btn-primary\" name=\"two\" value=\"2\" /></td>\r\n                        <td><input onClick={this.props.onClick} type=\"button\" className=\"btn  btn-block btn-primary\" name=\"three\" value=\"3\" /></td>\r\n                        <td><input onClick={this.props.onClick} type=\"button\" className=\"btn  btn-block btn-secondary\" name=\"plus\" value=\"+\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><input onClick={this.props.onClick} type=\"button\" className=\"btn  btn-block btn-primary\" name=\"four\" value=\"4\" /></td>\r\n                        <td><input onClick={this.props.onClick} type=\"button\" className=\"btn  btn-block btn-primary\" name=\"five\" value=\"5\" /></td>\r\n                        <td><input onClick={this.props.onClick} type=\"button\" className=\"btn  btn-block btn-primary\" name=\"six\" value=\"6\" /></td>\r\n                        <td><input onClick={this.props.onClick} type=\"button\" className=\"btn  btn-block btn-secondary\" name=\"minus\" value=\"-\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><input onClick={this.props.onClick} type=\"button\" className=\"btn  btn-block btn-primary\" name=\"seven\" value=\"7\" /></td>\r\n                        <td><input onClick={this.props.onClick} type=\"button\" className=\"btn  btn-block btn-primary\" name=\"eight\" value=\"8\" /></td>\r\n                        <td><input onClick={this.props.onClick} type=\"button\" className=\"btn  btn-block btn-primary\" name=\"nine\" value=\"9\" /></td>\r\n                        <td><input onClick={this.props.onClick} type=\"button\" className=\"btn  btn-block btn-secondary\" name=\"multiply\" value=\"*\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><input onClick={this.props.onClick} id=\"delete\" type=\"button\" className=\"btn  btn-block btn-primary\" name=\"delete\" value=\"C\" /></td>\r\n                        <td><input onClick={this.props.onClick} type=\"button\" className=\"btn  btn-block btn-primary\" name=\"zero\" value=\"0\" /></td>\r\n                        <td><input onClick={this.props.onClick} id=\"equal\" className=\"btn  btn-block btn-success\" type=\"button\" name=\"equal\" value=\"=\" /></td>\r\n                        <td><input onClick={this.props.onClick} type=\"button\" className=\"btn  btn-block btn-secondary\" name=\"divide\" value=\"/\" /></td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default KeyPad;","import React from 'react';\r\nimport './App.css';\r\nimport CalculatorScreen from './components/calculatorScreen';\r\nimport KeyPad from './components/keyPad';\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      result: ''\r\n    }\r\n    this.inputs = [];\r\n    this.phepTinh = [];\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  calculate(n1, operator, n2) {\r\n    if (n2 === null) return n1;\r\n    const firstNumber = parseInt(n1);\r\n    const secondNumber = parseInt(n2);\r\n    if (operator === '+') return firstNumber + secondNumber;\r\n    if (operator === '-') return firstNumber - secondNumber;\r\n    if (operator === '*') return firstNumber * secondNumber;\r\n    if (operator === '/') return parseInt(firstNumber / secondNumber);\r\n  }\r\n  //lay so hang chuc, hang tram...\r\n  giveDigits(arr) {\r\n    return arr.join('').match(/\\d+/g).map(e => +e)\r\n  }\r\n  handleClick(e) {\r\n    if (this.state.result.length > 8) {\r\n      this.setState({ result: 'input overflow' })\r\n    }\r\n    const numbers = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"];\r\n    const operators = [\"plus\", \"minus\", \"multiply\", \"divide\", \"equal\"];\r\n    const operatorsSymbols = [\"+\", \"-\", \"*\", \"/\"];\r\n    const newInputName = e.target.name;\r\n    const newInputValue = e.target.value;\r\n    this.inputs.push(newInputValue);\r\n    //if input is number\r\n    if (numbers.includes(newInputName)) {\r\n      //if input before that is operator then clear screen\r\n      if (operatorsSymbols.includes(this.inputs[this.inputs.length - 2])) {\r\n        this.setState({ result: '' });\r\n        this.setState(prevState => ({ result: prevState.result + newInputValue }));\r\n      }\r\n      else {\r\n        this.setState(prevState => ({ result: prevState.result + newInputValue }));\r\n      }\r\n    }\r\n    else if (newInputName === \"equal\") {\r\n      const numbersInput = this.giveDigits(this.inputs);\r\n      const result = this.calculate(numbersInput[0], this.phepTinh[0], numbersInput[1]);\r\n      this.setState({ result });\r\n      this.phepTinh = [];\r\n      this.inputs = [];\r\n      this.inputs[0] = result;\r\n    }\r\n    //if input is operator\r\n    else if (operators.includes(newInputName)) {\r\n      const numbersInput = this.giveDigits(this.inputs);\r\n      this.phepTinh.push(newInputValue);\r\n      let result;\r\n      if (numbersInput.length === 1) {\r\n        result = this.calculate(numbersInput[0], this.phepTinh[0], null);\r\n      } else {\r\n        result = this.calculate(numbersInput[0], this.phepTinh[0], numbersInput[1]);\r\n        this.phepTinh = [];\r\n        this.inputs = [];\r\n        this.inputs[0] = result;\r\n        this.phepTinh[0] = newInputValue;\r\n      }\r\n      this.setState({ result });\r\n    }\r\n    else if (newInputName === \"delete\") {\r\n      if(typeof(this.inputs[0]) === 'number'){\r\n        this.inputs[0] = this.inputs[0].toString();\r\n        this.inputs[0] = this.inputs[0].split(\"\");\r\n      }\r\n      this.inputs[0].pop();\r\n      console.log(this.inputs)\r\n      this.phepTinh.pop();\r\n      this.setState({ result: this.state.result.toString().split(\"\").slice(0, -1).join(\"\") });\r\n    }\r\n    else if(newInputName === \"AC\"){\r\n      this.inputs = [];\r\n      this.phepTinh = []; \r\n      this.setState({result: ''});   \r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <h1 className=\"text-center\">Calculator React</h1>\r\n      <div className=\"App\">\r\n        <CalculatorScreen input={this.state.result} />\r\n        <KeyPad onClick={this.handleClick} />\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}